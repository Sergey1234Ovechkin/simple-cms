{
  "title": "Getting all the data from the array at once",
  "text": "Also let's look at another method that we used above (Updating the array with different template options) this is HM.state[\"test_array\"].`GetAll()` - it gets an array with objects whose keys are property names,\r\nand values are data obtained by calling the getProp() method on each property.\r\n\r\nBut what if we don't want to get all the properties, for example, events or \"style\" styles, to do this, we need to pass a map object to it, the keys of which will be the names of the properties that we want to get, for example:\r\n\r\n```javscript\r\n\r\nconsole.log(HM.state[\"test_array\"].getAll({main_text: \"\", variant: {text: \"\", text2: \"\"} }));\r\n\r\n//or so:\r\n\r\nconsole.log(HM.state[\"test_array\"].getAll( {main_text: \"\", variant: {componentName: \"\", text: \"\", text2: \"\"} }) );\r\n\r\n//ComponentName - name of the displayed component (in this case, a virtual array)\r\n\r\n```\r\nNow all the \"style\" properties are not in this sample, so we can get the data we need and easily save them on the server, and in the future create new components based on them.\r\nThis is not only how the array method works .GetAll but also a container method .getAllProps and the property method .getProp\r\n"
}