{
  "title": "Listening to user events from array properties",
  "text": "So let's look at the difference between container properties and array properties.\r\nFor example, we have an array `menu` with properties `class_menu` and `listener_load_page` in which the `item` containers with properties `class_item` and `text_item` are located:\r\n\r\n```html\r\n\r\n <div data-menu=\"array\" data-menu-class_menu=\"class\" data-menu-listener_load_page=\"emiter-load-page\">\r\n\r\n<div data-item=\"container\" data-item-class_item=\"class\">\r\n<a data-item-text_item=\"text\"> text 1 </a>\r\n </div>\r\n \r\n <div data-item=\"container\" data-item-class_item=\"class\">\r\n<a data-item-text_item=\"text\"> text 2 </a>\r\n </div>\r\n \r\n </div> \r\n\r\n```\r\n\r\nIn the description of the application:\r\n\r\n```javascript\r\n var State ={ \r\n menu: {\r\n\r\narrayProps: [ \"class_menu\", \"listener_load_page\" ], //array properties\r\n arrayMethods: { \r\n \r\n listener_load_page: function() { //event handler for array property\r\n \r\n this.parent.add( this.emiter.getEventProp() );\r\n//this.parent points to an array\r\n \r\n                                                }\r\n },\r\ncontainer: \"item\", //container name \r\n props: [ \"class_item\", \"text_item\"], // container properties\r\n methods: {\r\n \r\n                 }\r\n },\r\n eventEmiters: { \r\n \r\n [\"emiter-load-page\"]: { //user event with initial data\r\n \r\n prop: \"\",\r\n                                   }\r\n                        }\r\n \r\n \r\n }\r\n \r\nwindow.onload = function(){\r\n\r\n var HM = new HTMLixState(State); \r\n \r\n window.setTimeout(function(){\r\n\r\nHM.eventProps[\"emiter-load-page\"].setEventProp( {text_item: \"new text\"}); //called the event 3 seconds after the application instance was created and passed the data for the new container to it.\r\n console.log(HM);\r\n \r\n }, 3000 );\r\n \r\n} \r\n```\r\n\r\nAs can be seen from the example above, the `class_menu` and `listener_load_page` properties are array properties (arrayProps - in the application description), and the `class_item` and `text_item` properties are item container properties (props - in the application description).\r\n\r\nIn the created instance of the application, calling this.parent in the container property points to the container, and calling this.parent in the array points to the array in which it is located.\r\n\r\nIt is important to correctly place the listener properties of user events, because when it is placed in a container, it is called on each container, and when placed in an array, it is called only once for an array. Therefore, it is better to add containers to the array from the array property, as in the example above."
}