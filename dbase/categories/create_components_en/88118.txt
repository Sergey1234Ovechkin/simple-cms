{
  "title": "Auxiliary methods - aux",
  "text": "Auxiliary methods of a container or array are declared in the application description in the props array:  [ ['`name_method`', 'aux'] ... ].\r\nIn an already created component, they will not be in the props object, they will be available in the `methods` object of the container or array.\r\nthis - in the method points to a component (container or array). They are inherited according to the same principle as the usual properties.\r\n\r\nUsage example:\r\n\r\ncontainer:\r\n\r\n```javascript\r\n form: {\r\ncontainer: \"form\",\r\nprops: [\"input\", \"click\", [\"test_and_send_name\", \"aux\"] ], ///added an auxiliary method property with the aux\r\nmethods type: {\r\n \r\n click: function(){\r\n event.preventDefault();\r\n var text = this.parent.props.input.getProp();\r\n\r\nthis.parent.methods.test_and_send_name(text); // auxiliary (aux) methods are located in the methods object of the container\r\n \r\n console.log(text);\r\n\r\n},\r\ntest_and_send_name: function(name){ // the method can accept parameters\r\n \r\n ///this in the method points to the container\r\n \r\n if(name.length < 2){\r\nalert(\"name must be more than two characters\");\r\nreturn;\r\n}\r\n \r\n this.rootLink.eventProps[\"emiter-set-name\"].setEventProp(name); // called the \"emiter-set-name\" event from the method\r\n window.localStorage.setItem('user_name', name);\r\n \r\n             } \r\n       }, \r\n },\r\n\r\n```\r\n\r\narray:\r\n\r\n```javascript\r\n users_array: { \r\n selector: \"div.row\",\r\n arrayProps: [ \"message\", \r\n [\"send_message\", \"aux\"], //added auxiliary method\r\n ['listen_set_name', \"emiter-set-name\", \"\"],\r\n ['listen_exit_user', \"emiter-exit-user\", \"\"] \r\n ], \r\n arrayMethods: {\r\n \r\n send_message: function(type, mess){ //the auxiliary method takes two parameters\r\n \r\n if(type ==\"login\"){\r\n\r\nthis.props.message.setProp(\"new visitor - \"+mess); //this in the array method points to an array\r\n \r\n }else if(type == \"logout\"){\r\n\r\nthis.props.message.setProp(mess+\" - left the site\");\r\n \r\n } \r\n }, \r\n listen_set_name: function(){\r\n \r\n this.parent.add( {user_name: this.emiter.getEventProp()} );\r\n \r\n this.parent.methods.send_message(\"login\", this.emiter.getEventProp()); //called auxiliary method\r\n\r\n},\r\nlisten_exit_user: function(){\r\n\r\nthis.parent.data.forEach(container=>{\r\n\r\nif(container.props.user_name.getProp() == this.emiter.getEventProp()){\r\n \r\n                 container.remove(true); \r\n                   } \r\n });\r\n this.parent.methods.send_message(\"logout\", this.emiter.getEventProp()); //called auxiliary method\r\n},\r\n},\r\ncontainer: \"user\",\r\nprops: [ \"user_name\", ],\r\nmethods: {\r\n              },\r\n}, \r\n\r\n```\r\n<a href=\"https://sergeyovechkin.github.io/tests/test-aux-methods/index.html\">The full code of this example</a>\r\n"
}